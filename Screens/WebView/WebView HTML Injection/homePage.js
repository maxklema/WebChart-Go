import mie from '@maxklema/mie-api-tools';

export const homePageJSInject = `

(function() {        
    fetch('${mie.URL.value}')
    .then(response => {
        const container = document.getElementById('wc_main');
        const newHTML = document.createElement("div");
        newHTML.innerHTML = "<!DOCTYPE html><details class='welcome-container' open>    <summary>        <p>WebChart Go Features</p>        <span class='icon'>&#9660;</span>    </summary>    <div class='features-container'>        <div class='feature'>            <div class='category'>                <p>Add Patients to Mobile Contacts</p>            </div>            <div class='content'>                <p>By clicking on any patient portal, you will see an option to add a patient to your mobile contacts.</p>            </div>        </div>        <div class='feature'>            <div class='category'>                <p>See Patients Calling You</p>            </div>            <div class='content'>                <p>You no longer need to memorize patient phone numbers. When a call comes in from a phone number that is linked to a patient in your WebChart, you will see their information, all without adding their contact information to your mobile device.</p>            </div>        </div>        <div class='feature'>            <div class='category'>                <p>Text Patients from the App</p>            </div>            <div class='content'>                <p>You can text patients right from their patient portal, without having to leave the app.</p>            </div>        </div>        <div class='feature'>            <div class='category'>                <p>Better API Tools</p>            </div>            <div class='content'>                <p>WebChart Go is integrated with technology that allows you to more efficiently filter, edit, and add the exact data you want.</p>            </div>        </div>    </div></details><style>    .welcome-container {            background-color: white;            margin-bottom: 10px;             border-radius: 5px;         }            .features-container {            padding: 5px 20px 5px 20px;         }           .feature {                    display: flex;                    background: rgb(252, 252, 252);                    flex-direction: column;                    margin-top: 20px;                    border-radius: 10px;                    border: 2px solid rgb(197, 197, 197);                    margin-bottom: 20px;            }                .features-container:last-child {                       margin-bottom: 10px;    }                    .category {                            font-size: 18px;                            margin-right: 5%;                            font-weight: 700;                            text-align: left;                            background-color: #f0f0ea;                            width: 100% !important;                            border-radius: 8px 8px 0 0;                        }        .category p {                margin-left: 10px;        }        .content {                font-size: 15px;                text-align: left;                padding: 5px 15px;        }    summary {        display: flex;        cursor: pointer;        flex-direction: row;        justify-content: space-between;        align-items: center;        background-color: #d65b27;        padding: 0px 20px !important;        padding-top: -10px;        color: white;        font-size: 18px;        font-weight: 600;        border-radius: 5px;        }    summary::-webkit-details-marker {        display: none;    }    details {        user-select: none;    }    details>summary span.icon {        width: 24px;        height: 24px;    }    details[open] summary span.icon {        transform: rotate(180deg) translateX(5px) translateY(3px);        }    details[open] summary {        border-radius: 5px 5px 0px 0px;    }    </style>";
        container.insertBefore(newHTML, container.firstChild);
        let dataToReturn = {'Cookie': response.headers.get('x-lg_session_id'), 'Username': response.headers.get('X-lg_username')};
        window.ReactNativeWebView.postMessage(JSON.stringify(dataToReturn));
        })
    })();
    true;              
`